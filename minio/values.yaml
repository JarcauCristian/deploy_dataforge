affinity: {}
apiIngress:
  annotations: {}
  apiVersion: ''
  enabled: false
  extraHosts: []
  extraPaths: []
  extraRules: []
  extraTls: []
  hostname: null
  ingressClassName: ''
  path: /
  pathType: ImplementationSpecific
  secrets: []
  selfSigned: null
  servicePort: minio-api
  tls: null
args: []
auth:
  existingSecret: ''
  forceNewKeys: false
  forcePassword: false
  rootPassword: password
  rootUser: admin
  useCredentialsFiles: false
clientImage:
  digest: ''
  registry: docker.io
  repository: bitnami/minio-client
  tag: 2023.12.2-debian-11-r1
clusterDomain: cluster.local
command: []
commonAnnotations: {}
commonLabels: {}
containerPorts:
  api: 9000
  console: 9001
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  enabled: true
  privileged: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001
  seccompProfile:
    type: RuntimeDefault
customLivenessProbe: {}
customReadinessProbe: {}
customStartupProbe: {}
defaultBuckets: dataspace
deployment:
  updateStrategy:
    type: Recreate
disableWebUI: false
extraDeploy: []
extraEnvVars: []
extraEnvVarsCM: ''
extraEnvVarsSecret: ''
extraVolumeMounts: []
extraVolumes: []
fullnameOverride: ''
global:
  imagePullSecrets: []
  imageRegistry: ''
  storageClass: ''
hostAliases: []
image:
  debug: false
  digest: ''
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/minio
  tag: 2023.12.7-debian-11-r0
ingress:
  annotations: {}
  apiVersion: ''
  enabled: false
  extraHosts: []
  extraPaths: []
  extraRules: []
  extraTls: []
  hostname: null
  ingressClassName: ''
  path: /
  pathType: ImplementationSpecific
  secrets: []
  selfSigned: false
  servicePort: minio-console
  tls: false
initContainers: []
kubeVersion: ''
lifecycleHooks: {}
livenessProbe:
  enabled: true
  failureThreshold: 5
  initialDelaySeconds: 5
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 5
metrics:
  prometheusAuthType: public
  prometheusRule:
    additionalLabels: {}
    enabled: false
    namespace: ''
    rules: []
  serviceMonitor:
    apiVersion: ''
    enabled: false
    honorLabels: false
    interval: 30s
    jobLabel: ''
    labels: {}
    metricRelabelings: []
    namespace: ''
    paths:
    - /minio/v2/metrics/cluster
    - /minio/v2/metrics/node
    relabelings: []
    scrapeTimeout: ''
    selector: {}
    tlsConfig: {}
mode: standalone
nameOverride: ''
networkPolicy:
  allowExternal: true
  enabled: false
  extraFromClauses: []
nodeAffinityPreset:
  key: ''
  type: ''
  values: []
nodeSelector: {}
pdb:
  create: false
  maxUnavailable: ''
  minAvailable: 1
persistence:
  accessModes:
  - ReadWriteOnce
  annotations: {}
  enabled: true
  existingClaim: ''
  mountPath: /bitnami/minio/data
  size: 8Gi
  storageClass: ''
podAffinityPreset: ''
podAnnotations: {}
podAntiAffinityPreset: soft
podLabels: {}
podSecurityContext:
  enabled: true
  fsGroup: 1001
  fsGroupChangePolicy: OnRootMismatch
priorityClassName: ''
provisioning:
  args: []
  buckets: []
  cleanupAfterFinished:
    enabled: false
    seconds: 600
  command: []
  config: []
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    enabled: true
    privileged: false
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1001
    seccompProfile:
      type: RuntimeDefault
  enabled: false
  extraCommands: []
  extraVolumeMounts: []
  extraVolumes: []
  groups: []
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  policies: []
  resources:
    limits: {}
    requests: {}
  schedulerName: ''
  users: []
  usersExistingSecrets: []
readinessProbe:
  enabled: true
  failureThreshold: 5
  initialDelaySeconds: 5
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 1
resources:
  limits: {}
  requests: {}
schedulerName: ''
service:
  annotations: {}
  clusterIP: ''
  externalTrafficPolicy: Cluster
  extraPorts: []
  headless:
    annotations: {}
  loadBalancerIP: ''
  loadBalancerSourceRanges: []
  nodePorts:
    api: ''
    console: ''
  ports:
    api: 9000
    console: 9001
  type: LoadBalancer
serviceAccount:
  annotations: {}
  automountServiceAccountToken: true
  create: true
  name: ''
sidecars: []
startupProbe:
  enabled: false
  failureThreshold: 60
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
statefulset:
  drivesPerNode: 1
  podManagementPolicy: Parallel
  replicaCount: 4
  updateStrategy:
    type: RollingUpdate
  zones: 1
terminationGracePeriodSeconds: ''
tls:
  autoGenerated: false
  enabled: false
  existingSecret: ''
  mountPath: ''
tolerations: []
topologySpreadConstraints: []
volumePermissions:
  containerSecurityContext:
    runAsUser: 0
  enabled: false
  image:
    digest: ''
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/os-shell
    tag: 11-debian-11-r92
  resources:
    limits: {}
    requests: {}
